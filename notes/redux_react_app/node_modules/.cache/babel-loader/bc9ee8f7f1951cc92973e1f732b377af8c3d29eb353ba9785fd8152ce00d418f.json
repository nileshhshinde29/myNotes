{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nexport const fetchTodos = createAsyncThunk('fetchTodos', async () => {\n  const todo = axios.get(\"https://todo-backend-rest.onrender.com/todos\").then(res => console.log(res.data)).catch(e => console.log(e));\n  return todo;\n});\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    // Additional reducers can be defined here\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.posts = action.payload;\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  increament,\n  decreament\n} = count.actions;\nexport default count.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchTodos","todo","get","then","res","console","log","data","catch","e","initialState","posts","status","error","postsSlice","name","reducers","extraReducers","builder","addCase","fetchPosts","pending","state","fulfilled","action","payload","rejected","message","increament","decreament","count","actions","reducer"],"sources":["/home/am-pc-63/NHS/React/react_Interview_notes_prectice/myNotes/notes/redux_react_app/src/practice/counterSclice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios'\n\nexport const fetchTodos = createAsyncThunk('fetchTodos', async () => {\n    const todo = axios.get(\"https://todo-backend-rest.onrender.com/todos\")\n        .then((res) => console.log(res.data))\n        .catch((e) => console.log(e))\n    return todo\n});\nconst initialState = {\n    posts: [],\n    status: 'idle',\n    error: null,\n};\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {\n        // Additional reducers can be defined here\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchPosts.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(fetchPosts.fulfilled, (state, action) => {\n                state.status = 'succeeded';\n                state.posts = action.payload;\n            })\n            .addCase(fetchPosts.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.error.message;\n            });\n    },\n});\n\n\nexport const { increament, decreament } = count.actions\n\nexport default count.reducer\n\n\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,YAAY,EAAE,YAAY;EACjE,MAAMI,IAAI,GAAGF,KAAK,CAACG,GAAG,CAAC,8CAA8C,CAAC,CACjEC,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,CAAC,IAAKJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC,CAAC;EACjC,OAAOR,IAAI;AACf,CAAC,CAAC;AACF,MAAMS,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,GAAGhB,WAAW,CAAC;EAC3BiB,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACN;EAAA,CACH;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACC,UAAU,CAACC,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACV,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDO,OAAO,CAACC,UAAU,CAACG,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACV,MAAM,GAAG,WAAW;MAC1BU,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDN,OAAO,CAACC,UAAU,CAACM,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACV,MAAM,GAAG,QAAQ;MACvBU,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACX,KAAK,CAACc,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEC,UAAU;EAAEC;AAAW,CAAC,GAAGC,KAAK,CAACC,OAAO;AAEvD,eAAeD,KAAK,CAACE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}